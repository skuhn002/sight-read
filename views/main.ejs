<!-- <img src="img/music-staff.jpg" alt="Music Staff"> -->
<script src="https://cdn.jsdelivr.net/npm/vexflow@4.2.2/build/cjs/vexflow.js"></script>

<div>
    <button onclick="location.reload()">Refresh</button>
</div>
<div style="display: flex; justify-content: center; align-items: center; font-size: 20vw">
    <div id="output"></div>

</div>
<div style="display: flex; justify-content: center; align-items: center; font-size: 100px; padding-top: 100px;">
    <p style="text-align: center;"><%= note %></p>
</div>

<script>
    const { Renderer, Stave, StaveNote, Voice, Formatter } = Vex.Flow;

    // Create an SVG renderer and attach it to the DIV element named "boo".
    const div = document.getElementById("output");
    const renderer = new Renderer(div, Renderer.Backends.SVG);
    
    // Configure the rendering context.
    renderer.resize(500, 500);
    const context = renderer.getContext();

    // Create a stave of width 400 at position 10, 40 on the canvas.
    const stave = new Stave(10, 40, 400);

    // Add a clef and time signature.
    stave.addClef("<%- cleff %>").addTimeSignature("4/4");

    const notes = [
    // A quarter-note C.
    new StaveNote({ keys: ["c/4"], duration: "q" })
    ];

    const notes2 = [
    // A quarter-note C.
    new StaveNote({ keys: [<%- note %>], duration: "q" })
    ];

    // Create a voice in 4/4 and add above notes
    const voice = new Voice({ num_beats: 1, beat_value: 4 });
    voice.addTickables(notes2);

    new Formatter().joinVoices([voice]).format([voice], 350);

    // Connect it to the rendering context and draw!
    voice.draw(context, stave)
    stave.setContext(context).draw();
</script>
